version: '3.8'

services:
  app:
    build: .
    container_name: rocket-pc-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_TITLE=${APP_TITLE}
      - APP_DESCRIPTION=${APP_DESCRIPTION}
      - APP_VERSION=${APP_VERSION}
      - HOST=${HOST}
      - PORT=${PORT}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE}
      - TIMEZONE=${TIMEZONE}
    volumes:
      - uploads_data:/app/static/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    db_backup:
    image: postgres:14
    container_name: supabase-backup
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "while true; do
         PGPASSWORD=${PGPASSWORD} pg_dump -h ${PGHOST} -U ${PGUSER} -d ${PGDATABASE} -F c -f /backups/supabase_$(date +%F_%T).dump;
         sleep 86400;
       done"
    environment:
      PGHOST: aws-0-eu-west-2.pooler.supabase.com
      PGUSER: postgres.ymombwsrvuzuaalctmfm
      PGPASSWORD: BJpbYaLB1mBKAHgn
      PGDATABASE: postgres
    volumes:
      - ./supabase_backups:/backups
    restart: unless-stopped

volumes:
  uploads_data:

networks:
  default:
    name: rocket-pc-network
