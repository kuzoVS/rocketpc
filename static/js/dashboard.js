// –ü–†–û–í–ï–†–ö–ê –¢–û–ö–ï–ù–ê –î–û –ó–ê–ì–†–£–ó–ö–ò DOM
console.log('üöÄ Dashboard JS –∑–∞–≥—Ä—É–∂–µ–Ω');

// –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
const token = localStorage.getItem('access_token');
console.log('üîë –¢–æ–∫–µ–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', token ? '–ï–°–¢–¨' : '–ù–ï–¢');

if (!token) {
    console.log('‚ùå –¢–æ–∫–µ–Ω–∞ –Ω–µ—Ç, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ login');
    window.location.replace('/auth/login');
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
    throw new Error('No token, redirecting to login');
}

document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω');

    // –°—Ä–∞–∑—É —Å–∫—Ä—ã–≤–∞–µ–º loader –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    hideLoaderAndShowContent();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    loadBasicInfo();

    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ —Ñ–æ–Ω–µ
    checkAuthInBackground();
});

function hideLoaderAndShowContent() {
    console.log('üëÅÔ∏è –°–∫—Ä—ã–≤–∞–µ–º loader...');

    const loader = document.getElementById('authCheckLoader');
    if (loader) {
        loader.style.display = 'none';
        console.log('‚úÖ Loader —Å–∫—Ä—ã—Ç');
    } else {
        console.log('‚ö†Ô∏è Loader –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    const content = document.getElementById('dashboardContent');
    if (content) {
        content.style.display = 'block';
        console.log('‚úÖ Dashboard –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–∫–∞–∑–∞–Ω');
    } else {
        console.log('‚ö†Ô∏è dashboardContent –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º body');
        document.body.style.visibility = 'visible';
        document.body.style.opacity = '1';
    }
}

function loadBasicInfo() {
    console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...');

    try {
        const user = JSON.parse(localStorage.getItem('user') || '{}');
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userName = document.getElementById('userName') || document.querySelector('.user-name');
        if (userName && user.full_name) {
            userName.textContent = user.full_name;
            console.log('‚úÖ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å
        const userRole = document.getElementById('userRole') || document.querySelector('.user-role');
        if (userRole && user.role) {
            userRole.textContent = getRoleDisplayName(user.role);
            console.log('‚úÖ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
        const userAvatar = document.getElementById('userAvatar') || document.querySelector('.user-avatar');
        if (userAvatar && user.full_name) {
            userAvatar.textContent = user.full_name.charAt(0).toUpperCase();
            console.log('‚úÖ –ê–≤–∞—Ç–∞—Ä –æ–±–Ω–æ–≤–ª–µ–Ω');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
        if (user.role === 'admin' || user.role === 'director') {
            const usersMenuItem = document.getElementById('usersMenuItem');
            if (usersMenuItem) {
                usersMenuItem.style.display = 'block';
                console.log('‚úÖ –ü—É–Ω–∫—Ç "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" –ø–æ–∫–∞–∑–∞–Ω');
            }
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    setDefaultStats();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ
    showTablePlaceholder();
}

function setDefaultStats() {
    console.log('üìà –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...');

    const stats = {
        'activeRequestsCount': '12',
        'completedRequestsCount': '85',
        'monthlyRevenue': '‚ÇΩ425 000',
        'avgRepairTime': '3—á'
    };

    Object.entries(stats).forEach(([id, value]) => {
        const element = document.getElementById(id);
        if (element) {
            element.textContent = value;
            console.log(`‚úÖ ${id} = ${value}`);
        } else {
            console.log(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
    });
}

function showTablePlaceholder() {
    console.log('üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Ç–∞–±–ª–∏—Ü—ã...');

    const tbody = document.getElementById('recentRequestsTable') || document.querySelector('table tbody');
    if (tbody) {
        tbody.innerHTML = `
            <tr>
                <td>#RQ2A4F</td>
                <td>–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</td>
                <td>–ù–æ—É—Ç–±—É–∫ ASUS</td>
                <td>–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è</td>
                <td><span class="status-badge status-new">–ü—Ä–∏–Ω—è—Ç–∞</span></td>
                <td>-</td>
                <td>30.05.2025</td>
                <td><button class="btn btn-outline" style="padding: 0.25rem 0.5rem; font-size: 0.85rem;">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button></td>
            </tr>
            <tr>
                <td>#RQ1B3E</td>
                <td>–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞</td>
                <td>–ü–ö</td>
                <td>–ü–µ—Ä–µ–≥—Ä–µ–≤–∞–µ—Ç—Å—è</td>
                <td><span class="status-badge status-in-progress">–í —Ä–µ–º–æ–Ω—Ç–µ</span></td>
                <td>–ê–ª–µ–∫—Å–µ–π</td>
                <td>29.05.2025</td>
                <td><button class="btn btn-outline" style="padding: 0.25rem 0.5rem; font-size: 0.85rem;">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button></td>
            </tr>
        `;
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    } else {
        console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
}

function checkAuthInBackground() {
    console.log('üîç –§–æ–Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');

    const token = localStorage.getItem('access_token');
    if (!token) {
        console.log('‚ùå –¢–æ–∫–µ–Ω–∞ –Ω–µ—Ç, —Ä–µ–¥–∏—Ä–µ–∫—Ç');
        redirectToLogin();
        return;
    }

    fetch('/auth/profile', {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    })
    .then(response => {
        console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ /auth/profile:', response.status);
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞:', data.username);
        // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        loadRealData();
    })
    .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
        console.log('üö™ –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ login');
        clearTokensAndRedirect();
    });
}

function clearTokensAndRedirect() {
    localStorage.removeItem('access_token');
    localStorage.removeItem('user');
    redirectToLogin();
}

function redirectToLogin() {
    console.log('üö™ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ login...');
    window.location.replace('/auth/login');
}

function loadRealData() {
    console.log('üìä –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    const token = localStorage.getItem('access_token');

    fetch('/dashboard/api/requests', {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    })
    .then(response => {
        console.log('üì° –û—Ç–≤–µ—Ç –Ω–∞ /dashboard/api/requests:', response.status);
        if (response.status === 401) {
            throw new Error('Unauthorized');
        }
        if (response.ok) {
            return response.json();
        }
        throw new Error(`HTTP ${response.status}`);
    })
    .then(data => {
        console.log('‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', data.length, '–∑–∞—è–≤–æ–∫');
        updateWithRealData(data);
    })
    .catch(error => {
        if (error.message === 'Unauthorized') {
            console.log('‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç');
            clearTokensAndRedirect();
        } else {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', error.message);
            console.log('üìä –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
        }
    });
}

function updateWithRealData(requests) {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const activeCount = requests.filter(r => r.status !== '–í—ã–¥–∞–Ω–∞').length;
    const completedCount = requests.filter(r => r.status === '–í—ã–¥–∞–Ω–∞').length;

    const activeElement = document.getElementById('activeRequestsCount');
    const completedElement = document.getElementById('completedRequestsCount');

    if (activeElement) activeElement.textContent = activeCount;
    if (completedElement) completedElement.textContent = completedCount;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    const tbody = document.getElementById('recentRequestsTable') || document.querySelector('table tbody');
    if (tbody && requests.length > 0) {
        tbody.innerHTML = requests.slice(0, 5).map(request => `
            <tr>
                <td>#${request.request_id || 'N/A'}</td>
                <td>${request.client_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</td>
                <td>${request.device_type || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</td>
                <td>${(request.problem_description || '–ù–µ —É–∫–∞–∑–∞–Ω–æ').substring(0, 30)}...</td>
                <td><span class="status-badge status-new">${request.status || '–ü—Ä–∏–Ω—è—Ç–∞'}</span></td>
                <td>${request.master_name || '-'}</td>
                <td>${formatDate(request.created_at)}</td>
                <td><button class="btn btn-outline" style="padding: 0.25rem 0.5rem; font-size: 0.85rem;">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button></td>
            </tr>
        `).join('');
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    }
}

function getRoleDisplayName(role) {
    const roleMap = {
        'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        'director': '–î–∏—Ä–µ–∫—Ç–æ—Ä',
        'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
        'master': '–ú–∞—Å—Ç–µ—Ä'
    };
    return roleMap[role] || role;
}

function formatDate(dateString) {
    if (!dateString) return 'N/A';
    try {
        return new Date(dateString).toLocaleDateString('ru-RU');
    } catch {
        return 'N/A';
    }
}

function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    if (sidebar) {
        sidebar.classList.toggle('active');
    }
}

// –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
function logout() {
    console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    localStorage.removeItem('access_token');
    localStorage.removeItem('user');
    window.location.replace('/auth/login');
}

// –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã—Ö–æ–¥–∞
document.addEventListener('DOMContentLoaded', function() {
    const logoutLinks = document.querySelectorAll('a[href="/logout"], a[href="#logout"]');
    logoutLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            logout();
        });
    });
});

// –ü—Ä–æ—Å—Ç—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏
function drawWeeklyChart() {
    const canvas = document.getElementById('weeklyChart');
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    ctx.fillStyle = "#00ffff";
    ctx.font = "16px Arial";
    ctx.fillText("–ì—Ä–∞—Ñ–∏–∫ –∑–∞—è–≤–æ–∫ –∑–∞ –Ω–µ–¥–µ–ª—é", 20, 30);
    ctx.fillText("(–¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ)", 20, 60);
}

function drawStatusChart() {
    const canvas = document.getElementById('statusChart');
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    ctx.fillStyle = "#00ffff";
    ctx.font = "16px Arial";
    ctx.fillText("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º", 20, 30);
    ctx.fillText("(–¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ)", 20, 60);
}

// –†–∏—Å—É–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
setTimeout(() => {
    drawWeeklyChart();
    drawStatusChart();
}, 1000);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Ç–æ–∫–µ–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
window.addEventListener('storage', function(e) {
    if (e.key === 'access_token' && !e.newValue) {
        console.log('üîë –¢–æ–∫–µ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç');
        redirectToLogin();
    }
});

console.log('‚úÖ Dashboard JS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');