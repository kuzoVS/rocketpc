// dashboard.js ‚Äî —Ä–∞–±–æ—Ç–∞ —á–µ—Ä–µ–∑ cookie –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é

window.addEventListener("DOMContentLoaded", () => {
  loadDashboardStats();
  loadDashboardRequests();
  loadUserInfo();
});

// üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
async function loadDashboardStats() {
  try {
    const res = await fetch("/dashboard/api/stats", {
      credentials: "include"
    });

    if (res.status === 401) {
      window.location.href = "/auth/login";
      return;
    }

    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏");

    const stats = await res.json();

    document.getElementById("activeRequestsCount").textContent = stats.active_requests || 0;
    document.getElementById("completedRequestsCount").textContent = stats.completed_requests || 0;
    document.getElementById("monthlyRevenue").textContent = `${stats.monthly_revenue || 0}‚ÇΩ`;
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
  }
}

// üßæ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞—è–≤–æ–∫
async function loadDashboardRequests() {
  try {
    const res = await fetch("/dashboard/api/requests", {
      credentials: "include"
    });

    if (res.status === 401) {
      window.location.href = "/auth/login";
      return;
    }

    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫");

    const requests = await res.json();
    renderRequestsTable(requests.slice(0, 5)); // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:", err);
    renderRequestsTable([]);
  }
}

// üë§ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
async function loadUserInfo() {
  try {
    const res = await fetch("/auth/profile", {
      credentials: "include"
    });

    if (res.status === 401) {
      window.location.href = "/auth/login";
      return;
    }

    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è");

    const user = await res.json();

    const userName = document.getElementById('userName');
    const userRole = document.getElementById('userRole');
    const userAvatar = document.getElementById('userAvatar');

    if (userName && user.full_name) {
      userName.textContent = user.full_name;
    }

    if (userRole && user.role) {
      const roleMap = {
        'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        'director': '–î–∏—Ä–µ–∫—Ç–æ—Ä',
        'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
        'master': '–ú–∞—Å—Ç–µ—Ä'
      };
      userRole.textContent = roleMap[user.role] || user.role;
    }

    if (userAvatar && user.full_name) {
      userAvatar.textContent = user.full_name.charAt(0).toUpperCase();
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É–Ω–∫—Ç "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if (user.role === 'admin' || user.role === 'director') {
      const usersMenuItem = document.getElementById('usersMenuItem');
      if (usersMenuItem) usersMenuItem.style.display = 'block';
    }

  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);
  }
}

// üñäÔ∏è –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
function renderRequestsTable(requests) {
  const tbody = document.getElementById("recentRequestsTable");

  if (!tbody) return;

  if (!requests.length) {
    tbody.innerHTML = `
      <tr>
        <td colspan="8" style="text-align: center; color: rgba(255,255,255,0.6);">
          –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        </td>
      </tr>`;
    return;
  }

  tbody.innerHTML = requests.map(r => `
    <tr>
      <td>#${r.request_id || '‚Äî'}</td>
      <td>${r.client_name || '‚Äî'}</td>
      <td>${r.device_type || '‚Äî'}</td>
      <td>${(r.problem_description || '').slice(0, 40)}...</td>
      <td><span class="status-badge ${getStatusClass(r.status)}">${r.status || '‚Äî'}</span></td>
      <td>${r.master_name || '‚Äî'}</td>
      <td>${r.created_at ? new Date(r.created_at).toLocaleDateString('ru-RU') : '‚Äî'}</td>
      <td>
        <a href="/dashboard/requests" class="btn btn-outline" style="padding: 4px 8px;">
          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
        </a>
      </td>
    </tr>
  `).join('');
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
function getStatusClass(status) {
  const statusMap = {
    '–ü—Ä–∏–Ω—è—Ç–∞': 'status-new',
    '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞': 'status-in-progress',
    '–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–µ–π': 'status-pending',
    '–í —Ä–µ–º–æ–Ω—Ç–µ': 'status-in-progress',
    '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': 'status-in-progress',
    '–ì–æ—Ç–æ–≤–∞ –∫ –≤—ã–¥–∞—á–µ': 'status-completed',
    '–í—ã–¥–∞–Ω–∞': 'status-completed'
  };
  return statusMap[status] || 'status-new';
}

// üö™ –í—ã—Ö–æ–¥
const logoutLink = document.getElementById("logout-link");
if (logoutLink) {
  logoutLink.addEventListener("click", (e) => {
    e.preventDefault();
    window.location.href = "/logout";
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –¥–ª—è sidebar
function logout() {
  window.location.href = "/logout";
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ sidebar –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
function toggleSidebar() {
  const sidebar = document.getElementById('sidebar');
  if (sidebar) sidebar.classList.toggle('active');
}